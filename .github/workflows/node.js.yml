name: Node.js CI

on:
  release:
    types:
      - created  # Trigger only when a new release is created

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.12.0]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

    # Find the built zip file in /dist
    - name: Find the built zip file
      id: find_zip
      run: |
        ZIP_FILE=$(find dist -name "*.zip" | head -n 1)
        if [[ -z "$ZIP_FILE" ]]; then
          echo "No zip file found in /dist!"
          exit 1
        fi
        echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV
        
    - name: Remove existing assets from release
      run: |
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                     "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}" | jq -r '.id')

        ASSET_IDS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                     "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets" | jq -r '.[].id')

        for ASSET_ID in $ASSET_IDS; do
          curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/repos/${{ github.repository }}/releases/assets/$ASSET_ID"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Upload the zip file to the GitHub release
    - name: Upload Asset to Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ZIP_FILE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
